# calculate_distance.py
import rclpy
from rclpy.node import Node
from nav_msgs.msg import Odometry
import math

class DistanceCalculator(Node):
    def __init__(self):
        super().__init__('distance_calculator')

        # Subscribers to each robot's odometry
        self.robot1_sub = self.create_subscription(Odometry, '/robot1/odom', self.robot1_callback, 10)
        self.robot2_sub = self.create_subscription(Odometry, '/robot2/odom', self.robot2_callback, 10)

        # Initialize robot positions
        self.robot1_position = None
        self.robot2_position = None

    def robot1_callback(self, msg):
        self.robot1_position = (msg.pose.pose.position.x, msg.pose.pose.position.y)
        self.calculate_distance()

    def robot2_callback(self, msg):
        self.robot2_position = (msg.pose.pose.position.x, msg.pose.pose.position.y)
        self.calculate_distance()

    def calculate_distance(self):
        if self.robot1_position and self.robot2_position:
            x1, y1 = self.robot1_position
            x2, y2 = self.robot2_position
            distance = math.sqrt((x2 - x1)**2 + (y2 - y1)**2)
            self.get_logger().info(f'Distance between robots: {distance:.2f} meters')

def main(args=None):
    rclpy.init(args=args)
    node = DistanceCalculator()
    rclpy.spin(node)
    rclpy.shutdown()

if __name__ == '__main__':
    main()
